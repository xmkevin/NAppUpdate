<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FeedBuilder</name>
    </assembly>
    <members>
        <member name="T:FindFiles.Win32.FindData">
            <summary>
            Structure that maps to WIN32_FIND_DATA
            </summary>
        </member>
        <member name="T:FindFiles.Win32.SafeFindHandle">
            <summary>
            SafeHandle class for holding find handles
            </summary>
        </member>
        <member name="M:FindFiles.Win32.SafeFindHandle.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FindFiles.Win32.SafeFindHandle.ReleaseHandle">
            <summary>
            Release the find handle
            </summary>
            <returns>true if the handle was released</returns>
        </member>
        <member name="T:FindFiles.Win32.SafeNativeMethods">
            <summary>
            Wrapper for P/Invoke methods used by FileSystemEnumerator
            </summary>
        </member>
        <member name="T:FindFiles.FileSystemEnumerator">
            <summary>
            File system enumerator.  This class provides an easy to use, efficient mechanism for searching a list of
            directories for files matching a list of file specifications.  The search is done incrementally as matches
            are consumed, so the overhead before processing the first match is always kept to a minimum.
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.m_scopes">
            <summary>
            Stack of open scopes.  This is a member (instead of a local variable)
            to allow Dispose to close any open find handles if the object is disposed
            before the enumeration is completed.
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.m_paths">
            <summary>
            Array of paths to be searched.
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.m_fileSpecs">
            <summary>
            Array of regular expressions that will detect matching files.
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.m_includeSubDirs">
            <summary>
            If true, sub-directories are searched.
            </summary>
        </member>
        <member name="M:FindFiles.FileSystemEnumerator.Dispose">
            <summary>
            IDisposable.Dispose
            </summary>
        </member>
        <member name="M:FindFiles.FileSystemEnumerator.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="pathsToSearch">Semicolon- or comma-delimitted list of paths to search.</param>
            <param name="fileTypesToMatch">Semicolon- or comma-delimitted list of wildcard filespecs to match.</param>
            <param name="includeSubDirs">If true, subdirectories are searched.</param>
        </member>
        <member name="M:FindFiles.FileSystemEnumerator.Matches">
            <summary>
            Get an enumerator that returns all of the files that match the wildcards that
            are in any of the directories to be searched.
            </summary>
            <returns>An IEnumerable that returns all matching files one by one.</returns>
            <remarks>The enumerator that is returned finds files using a lazy algorithm that
            searches directories incrementally as matches are consumed.</remarks>
        </member>
        <member name="T:FindFiles.FileSystemEnumerator.SearchInfo">
            <summary>
            Information that's kept in our stack for simulated recursion
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.SearchInfo.Handle">
            <summary>
            Find handle returned by FindFirstFile
            </summary>
        </member>
        <member name="F:FindFiles.FileSystemEnumerator.SearchInfo.Path">
            <summary>
            Path that was searched to yield the find handle.
            </summary>
        </member>
        <member name="M:FindFiles.FileSystemEnumerator.SearchInfo.#ctor(FindFiles.Win32.SafeFindHandle,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="h">Find handle returned by FindFirstFile.</param>
            <param name="p">Path corresponding to find handle.</param>
        </member>
        <member name="M:FeedBuilder.HelpfulTextBox.SetCue">
            <summary>
            Actually, the system cue only works for editable (i.e. not read-only) text boxes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FeedBuilder.My_Project.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FeedBuilder.My_Project.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FeedBuilder.My_Project.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:FeedBuilder.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
